<?php
/**
 * hook_entity_insert
 */ 
function auto_related_entity_insert($entity, $type){
  auto_related_entity_get($entity, $type);
}

/**
 * hook_entity_update
 */
function auto_related_entity_update($entity, $type){
  auto_related_entity_get($entity, $type);
}

/**
 * hook_entity_delete
 */
function auto_related_entity_delete($entity, $type){
  $lng = $entity->language;
  
  drupal_set_message("Deleting: " . var_export($entity,true));
}

/**
 * hook_entity_delete
 */
function auto_related_field_delete($entity_type, $entity, $field, $instance, $langcode, &$items){
  $lng = $entity->language;
  
  drupal_set_message("Deleting field: " . var_export($entity,true));
}

//Check if node relation exists
// params - $eid: entity id
//          $tid: related target id
function auto_related_exists($eid, $tid){
  $qry = "SELECT * FROM field_data_field_related WHERE entity_id=$eid AND field_related_target_id=$tid";
  $r = db_query($qry)->fetchObject();
  if($r)
    return true;
  else
    return false;  
}

function auto_related_entity_get($entity, $type){
  //drupal_set_message("Type of entity: $type");
  //drupal_set_message("Entity: " .var_export($entity,true));
  if($type == 'node'){
    $lng = $entity->language;
    drupal_set_message("Node Id:" . $entity->nid);
    
    //Check if other relation exists
    foreach($entity->field_related[$lng] as $k => $v) {
      if(auto_related_exists($v['target_id'],$entity->nid)){
        drupal_set_message("Relations to " . $v['target_id'] . " exists");
      }else{
        drupal_set_message("Relations to " . $v['target_id'] . " does not exists");
        auto_related_save_related($v['target_id'],$entity->nid);
      }
    }

  }
}

function auto_related_save_related_old($eid, $tid){
  $qry = "SELECT MAX(delta) as dmax FROM {field_data_field_related} WHERE entity_id=$eid";
  $row = db_query($qry)->fetchObject();
  if(isset($row->dmax)){
    $delta = $row->dmax + 1;
  }else{
    $delta = 0;
  }
  
  $qry = "SELECT type, language FROM {node} WHERE nid=$eid";
  $row = db_query($qry)->fetchObject();
  
  $fields = array('entity_type' => 'node', 'bundle' => $row->type, 'deleted' => 0, 'entity_id' => $eid, 'revision_id' => $eid, 'language' => $row->language, 'delta' => $delta, 'field_related_target_id' => $tid);
  db_insert('field_data_field_related')->fields($fields)->execute();
  db_insert('field_revision_field_related')->fields($fields)->execute();
}

function auto_related_save_related($eid, $tid){
  $node = node_load($eid);
  
  $delta = sizeof($node->field_related);
  drupal_set_message("Delta: $delta");
  drupal_set_message("Language: " . $node->language);
  //$node->field_fieldname['und'][0]['value'] = $val;
  //node_save($node);
}
