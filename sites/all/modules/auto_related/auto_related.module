<?php
/**
 * hook_entity_insert
 */ 
function auto_related_entity_insert($entity, $type){
  auto_related_entity_get($entity, $type);
}

/**
 * hook_entity_update
 */
function auto_related_entity_update($entity, $type){
  auto_related_entity_get($entity, $type);
}


//Check if node relation exists
// params - $eid: entity id
//          $tid: related target id
function auto_related_exists($eid, $tid){
  $qry = "SELECT * FROM field_data_field_related WHERE entity_id=$eid AND field_related_target_id=$tid";
  $r = db_query($qry)->fetchObject();
  if($r)
    return true;
  else
    return false;  
}

function auto_related_entity_get($entity, $type){
  if($type == 'node'){
    $lng = $entity->language;
    
    //Check if other relation exists
    foreach($entity->field_related[$lng] as $k => $v) {
      if(!auto_related_exists($v['target_id'],$entity->nid)){
        auto_related_save_related($v['target_id'],$entity->nid);
      }
    }

  }
}

function auto_related_save_related($eid, $tid){
 
  $node = node_load($eid);
  
  $lng = $node->language;
  $delta = sizeof($node->field_related[$lng]);
  
  $node->field_related[$lng][$delta]['target_id'] = $tid;

  field_attach_update('node', $node);
}

function auto_related_node_presave($n){
  $lng = $n->language;
  $delta = sizeof($n->field_related[$lng]);

  //Get node''s ids of related fields
  $p = array();
  for($i=0; $i < sizeof($_POST['field_related'][$lng]); $i++){
    $start = strrpos($_POST['field_related'][$lng][$i]['target_id'], '(', -1) +1;
    $len = strlen($_POST['field_related'][$lng][$i]['target_id']);
    $p[] = substr($_POST['field_related'][$lng][$i]['target_id'], $start, $len - $start -1);
  }

  //Remove duplicated nodes
  for($i = sizeof($p)-1; $i > 0; $i--){
    for($j = $i-1; $j >= 0; $j--){
      if($p[$i] == $p[$j]){
         unset($n->field_related[$lng][$i]);
         break;
      }
    }
  }

  //check deleted "Related to" fields
  foreach($n->original->field_related[$lng] as $k => $v){
    if(!in_array($v['target_id'], $p)) auto_related_remove_field($v['target_id'],$n->nid);
  }
  
}

/**
 *Remove a "Related to" node field from a given node
 * Params
 *  $nid : node to delete field form
 *  $tid : target id of field to be deleted
 */    
function auto_related_remove_field($nid,$tid){
  $node = node_load($nid);
  $lng = $node->language;
  
  foreach($node->field_related[$lng] as $k => $v) if($v['target_id'] == $tid) unset($node->field_related[$lng][$k]);
  
  field_attach_update('node', $node);
}
